@model CompleteQuestionViewModel
@using static AutoQuestionGenerator.Helper.Extentions
@{
    ViewData["Title"] = "Complete";
}

@*var questionTypes =
        (from question in Model.Question
         select question.Type.Type_Name).ToList();
    questionTypes = questionTypes.Unique().ToList();*@


<h2>Complete</h2>
<div style="max-width: 50%; max-height:150px">
    <canvas id="CorrectPer" width="400" height="400"></canvas>
</div>

<div style="max-width: 50%; max-height:30%">
    <canvas id="CorrectByType" width="400" height="400"></canvas>
</div>
<script>
    var options = {
        maintainAspectRatio: false,
        spanGaps: false,
        elements: {
            line: {
                tension: 0.4
            }
        },
        plugins: {
            filler: {
                propagate: false
            }
        },
        scales: {
            xAxes: [{
                ticks: {
                    autoSkip: false,
                    maxRotation: 0
                }
            }],
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    };
    new Chart('CorrectPer', {
        type: 'horizontalBar',
        data: {
            labels: ['Percentage'],
            datasets: [{
                label: '%',
                data: [@Model.Percentage.Percentage],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.4)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    },

                    beginAtZero: true, 
                    min: 0,
                    max: 100
                }],
                xAxes: [{
                    ticks: {
                        beginAtZero: true,
                        min: 0,
                        max: 100
                    }
                }]
            },
            maintainAspectRatio: false
        }
    });

    var ctx = document.getElementById("CorrectByType");
            var myChart = new Chart(ctx, {

                type: 'bar',
                data: {

                    labels: [@foreach (var item in Model.questionTypes)
            {

                        <text>'@item',</text>
            }],
            datasets: [{
            label: '% of Answers Correct',
                data: [@Model.List.Select(x => x.Percentage).ToList().Connect(","),2,3,4,5],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.4)',
                    'rgba(54, 162, 235, 0.4)',
                    'rgba(255, 206, 86, 0.4)',
                    'rgba(75, 192, 192, 0.4)',
                    'rgba(153, 102, 255, 0.4)',
                    'rgba(255, 159, 64, 0.4)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    },

                    min: 0,
                    max: 100
                }],
                xAxes: [{
                    min: 0,
                    max: 100
                }]
            }
        }
    });
</script>