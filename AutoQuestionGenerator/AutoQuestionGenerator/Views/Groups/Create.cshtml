@model AutoQuestionGenerator.Models.CreateGroupViewModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<form asp-action="Create" id="createGroupForm">
    @Html.ValidationSummary()
    Group Name:
    @Html.TextBoxFor(m => m.GroupName, new { @class = "form-control", style = "max-width:30%" })
    <br />
    @if (AutoQuestionGenerator.Accounts.UserHelper.UserInRole(AutoQuestionGenerator.Accounts.UserHelper.GetUserId(HttpContextAccessor.HttpContext.Session), AutoQuestionGenerator.Accounts.UserHelper.ROLE_ADMIN, new AutoQuestionGenerator.DatabaseModels.IdentityModels()))
    {
        <text>Access Type:</text>
        @Html.DropDownListFor(m => m.AccessType, new SelectList(Model.AccessTypes, "AccessTypeID", "AccessType_Name"), new { @class = "form-control", style = "max-width:30%" })
        <br />
    }
    <div class="row">
        @for (int i = 0; i < 4; i++)
        {
        <div class="col-md-3">
            @{ int end = (i + 1) * (int)Math.Ceiling((decimal)(Model.Users.Count() / 4.0)); }
            @for (int q = i * Model.Users.Count() / 4; q < (end > Model.Users.Count() ? Model.Users.Count() : end); q++)
            {
                <input id="@string.Format("GroupUsers_{0}__UserID", q)" name="GroupUsers[@q].UserID" type="hidden" value="@Model.Users[q].UserID">
                @Html.CheckBoxFor(x => x.GroupUsers[q].Selected) <text>- @Model.Users[q].First_Name @Model.Users[q].Last_Name</text><br />
            }
        </div>
        }
    </div>
    <br />
    <br />
    @Html.HiddenFor(m => m.CloseAfter)
    <button type="@(Model.CloseAfter ? "button": "submit")" class="btn btn-primary" id="createGroupButton">Create Group</button>
</form>