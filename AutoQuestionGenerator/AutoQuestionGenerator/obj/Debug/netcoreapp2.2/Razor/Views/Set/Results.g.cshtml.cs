#pragma checksum "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ed3a57f103ded17e11bdba690b52e39cfde88a79"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Set_Results), @"mvc.1.0.view", @"/Views/Set/Results.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Set/Results.cshtml", typeof(AspNetCore.Views_Set_Results))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\_ViewImports.cshtml"
using AutoQuestionGenerator;

#line default
#line hidden
#line 2 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\_ViewImports.cshtml"
using AutoQuestionGenerator.Models;

#line default
#line hidden
#line 2 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
using static AutoQuestionGenerator.Helper.Extentions;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ed3a57f103ded17e11bdba690b52e39cfde88a79", @"/Views/Set/Results.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ab11deb0466ec5e2e96aca1e14ec8a38233b3dfd", @"/Views/_ViewImports.cshtml")]
    public class Views_Set_Results : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<GroupResultsViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
  
    ViewData["Title"] = "Results";

#line default
#line hidden
            BeginContext(128, 24, true);
            WriteLiteral("\r\n<h2>Results</h2>\r\n\r\n\r\n");
            EndContext();
            BeginContext(325, 50, true);
            WriteLiteral("\r\n<div class=\"row\">\r\n    <div class=\"col-md-5\" >\r\n");
            EndContext();
#line 17 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
         if (Model.Question.Length != 0)
        {

#line default
#line hidden
            BeginContext(428, 356, true);
            WriteLiteral(@"            <p>Number of Questions that were correct by type</p>
            <div style=""max-width: 50%; max-height:30%"">
                <canvas id=""CorrectByType"" width=""400"" height=""400""></canvas>
            </div>
            <div style=""height:30%"">
                <canvas id=""Placement"" width=""400"" height=""400""></canvas>
            </div>
");
            EndContext();
#line 26 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"

        }
        else
        {

#line default
#line hidden
            BeginContext(822, 57, true);
            WriteLiteral("            <h3>No one has complete this work yet.</h3>\r\n");
            EndContext();
#line 31 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
        }

#line default
#line hidden
            BeginContext(890, 584, true);
            WriteLiteral(@"    </div>
    <div class=""col-md-7"">
        <table id=""studentTbl"">
            <tr>
                <th onclick=""sortTable(0, 'studentTbl')"">Name</th>
                <th onclick=""sortTable(1, 'studentTbl')"">Number of Attempts</th>
                <th onclick=""sortTable(2, 'studentTbl')"">Best Percentage</th>
                <th onclick=""sortTable(3, 'studentTbl')"">Worst Percentage</th>
                <th onclick=""sortTable(4, 'studentTbl')"">Best Question Type</th>
                <th onclick=""sortTable(5, 'studentTbl')"">Worst Question Type</th>
            </tr>
");
            EndContext();
#line 43 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
             foreach (var item in Model.Averages)
            {

#line default
#line hidden
            BeginContext(1540, 46, true);
            WriteLiteral("                <tr>\r\n                    <td>");
            EndContext();
            BeginContext(1587, 9, false);
#line 46 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                   Write(item.Name);

#line default
#line hidden
            EndContext();
            BeginContext(1596, 31, true);
            WriteLiteral("</td>\r\n                    <td>");
            EndContext();
            BeginContext(1628, 13, false);
#line 47 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                   Write(item.Attempts);

#line default
#line hidden
            EndContext();
            BeginContext(1641, 31, true);
            WriteLiteral("</td>\r\n                    <td>");
            EndContext();
            BeginContext(1673, 26, false);
#line 48 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                   Write(item.Percentage.Percentage);

#line default
#line hidden
            EndContext();
            BeginContext(1699, 31, true);
            WriteLiteral("</td>\r\n                    <td>");
            EndContext();
            BeginContext(1731, 31, false);
#line 49 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                   Write(item.WorstPercentage.Percentage);

#line default
#line hidden
            EndContext();
            BeginContext(1762, 31, true);
            WriteLiteral("</td>\r\n                    <td>");
            EndContext();
            BeginContext(1794, 13, false);
#line 50 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                   Write(item.bestType);

#line default
#line hidden
            EndContext();
            BeginContext(1807, 31, true);
            WriteLiteral("</td>\r\n                    <td>");
            EndContext();
            BeginContext(1839, 14, false);
#line 51 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                   Write(item.worstType);

#line default
#line hidden
            EndContext();
            BeginContext(1853, 30, true);
            WriteLiteral("</td>\r\n                </tr>\r\n");
            EndContext();
#line 53 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
            }

#line default
#line hidden
            BeginContext(1898, 40, true);
            WriteLiteral("        </table>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
#line 58 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
 if (Model.Question.Length != 0)
{

#line default
#line hidden
            BeginContext(1975, 847, true);
            WriteLiteral(@"    <script>
    var options = {
        maintainAspectRatio: false,
        spanGaps: false,
        elements: {
            line: {
                tension: 0.3
            }
        },
        plugins: {
            filler: {
                propagate: false
            }
        },
        scales: {
            xAxes: [{
                type: 'linear',
                ticks: {
                    autoSkip: false,
                    maxRotation: 0
                }
            }],
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    };


    var ctx = document.getElementById(""CorrectByType"");
            var myChart = new Chart(ctx, {

                type: 'bar',
                data: {

                    labels: [");
            EndContext();
#line 97 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                              foreach (var item in Model.questionTypes)
                    {

                        

#line default
#line hidden
            BeginContext(2921, 1, true);
            WriteLiteral("\'");
            EndContext();
            BeginContext(2923, 4, false);
#line 100 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                          Write(item);

#line default
#line hidden
            EndContext();
            BeginContext(2927, 2, true);
            WriteLiteral("\',");
            EndContext();
#line 100 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                                             
                    }

#line default
#line hidden
            BeginContext(2959, 97, true);
            WriteLiteral("],\r\n            datasets: [{\r\n            label: \'% of Answers Correct\',\r\n                data: [");
            EndContext();
            BeginContext(3057, 58, false);
#line 104 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                  Write(Model.List.Select(x => x.Percentage).ToList().Connect(","));

#line default
#line hidden
            EndContext();
            BeginContext(3115, 1357, true);
            WriteLiteral(@",2,3,4,5],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.4)',
                    'rgba(54, 162, 235, 0.4)',
                    'rgba(255, 206, 86, 0.4)',
                    'rgba(75, 192, 192, 0.4)',
                    'rgba(153, 102, 255, 0.4)',
                    'rgba(255, 159, 64, 0.4)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    },

                    beginAtZero: true,
                    min: 0,
                    max: 100
               ");
            WriteLiteral(@" }],
                xAxes: [{
                    ticks: {
                        beginAtZero: true,
                        min: 0,
                        max: 100
                    }
                }]
            }
        }
    });
        new Chart('Placement', {
            type: 'scatter',
        data: {
");
            EndContext();
#line 148 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
               var orderedAverages = Model.Averages.OrderBy(x => x.Percentage.Percentage); 

#line default
#line hidden
            BeginContext(4566, 23, true);
            WriteLiteral("        labels: [\'0%\', ");
            EndContext();
#line 149 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                        foreach (var item in orderedAverages)
        {

#line default
#line hidden
            BeginContext(4646, 1, true);
            WriteLiteral("\'");
            EndContext();
            BeginContext(4648, 26, false);
#line 151 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
  Write(item.Percentage.Percentage);

#line default
#line hidden
            EndContext();
            BeginContext(4674, 3, true);
            WriteLiteral("%\',");
            EndContext();
#line 151 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                                            
        }

#line default
#line hidden
            BeginContext(4695, 191, true);
            WriteLiteral(" \'100%\'],\r\n            datasets: [{\r\n                backgroundColor: \'rgba(255, 99, 132, 0.4)\',\r\n                borderColor: \'rgba(255, 99, 132, 1)\',\r\n                data: [{ x: 0, y: 0 },");
            EndContext();
#line 156 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                                       foreach (var pos in orderedAverages){

#line default
#line hidden
            BeginContext(4930, 5, true);
            WriteLiteral("{ x: ");
            EndContext();
            BeginContext(4936, 25, false);
#line 156 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                                                                                  Write(pos.Percentage.Percentage);

#line default
#line hidden
            EndContext();
            BeginContext(4961, 5, true);
            WriteLiteral(", y: ");
            EndContext();
            BeginContext(4967, 13, false);
#line 156 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                                                                                                                 Write(pos.sameCount);

#line default
#line hidden
            EndContext();
            BeginContext(4980, 3, true);
            WriteLiteral(" },");
            EndContext();
#line 156 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
                                                                                                                                              }

#line default
#line hidden
            BeginContext(4991, 702, true);
            WriteLiteral(@" { x: 100, y: 0 }],
                label: 'Percentage Distribution',
                fill: 'origin'
            }],
        },
        options: Chart.helpers.merge(options, {
        title: {
            text: 'Averages',
                display: true
            },
            scales: {
            xAxes: [{
                ticks: {
                    autoSkip: false,
                        maxRotation: 0
                    }
                }],
                yAxes: [{
                ticks: {
                    beginAtZero: true,

                    }
                }]
            },
            maintainAspectRatio: false
        })
    });
    </script>
");
            EndContext();
#line 184 "C:\Users\Daniel Ledger 13HJK\Documents\CourseWork\AutoQuestion-Generator-CW\AutoQuestionGenerator\AutoQuestionGenerator\Views\Set\Results.cshtml"
}

#line default
#line hidden
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GroupResultsViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
